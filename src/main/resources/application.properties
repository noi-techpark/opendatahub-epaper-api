# Configuration for local development: Copy this file to application-local.properties,
# substitute all environmental variables with values of your choice, and run maven with
#
# mvn -Dspring.profiles.active=local <your-maven-commands>
#
server.port = ${SERVER_PORT:8999}
debug = ${APP_DEBUG:false}
spring.datasource.username = ${DB_USERNAME}
spring.datasource.password = ${DB_PASSWORD}
spring.datasource.url = ${DB_URL}
spring.datasource.hikari.minimum-idle=${DB_POOL_SIZE_MIN:1}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE_MAX:8}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT_MS:120000}

spring.datasource.driver-class-name = org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate

spring.application.name = epaper-api
spring.jmx.default-domain = epaper-api

#removes excessive spring logging
logging.level.root=${LOG_LEVEL:DEBUG}
#removes excessive spring logging
logging.level.org.springframework.boot.autoconfigure = INFO
logging.level.org.springframework.web: INFO
logging.level.it.noi.edisplay = INFO
logging.level.org.hibernate.SQL=${LOG_LEVEL:DEBUG}

# cron schedule for fetching events and locations of NOI from OpenDataHub
cron.enabled = ${NOI_EVENTS_ENABLED:true}
cron.opendata.events = ${NOI_CRON_EVENTS:0 0 0/12 * * ?}
cron.opendata.locations = ${NOI_CRON_LOCATIONS:0 0 0/12 * * ?}
# how many minutes the event shows on the display before it starts
event.advance = ${NOI_EVENTS_ADVANCE:30}
# offset of how many minutes the events show, to be able to test different days
# should always be 0 in prodiuction
event.offset = ${NOI_EVENTS_OFFSET:0}

# File upload (default is 1MB)
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

# AWS
aws.credentials.accessKey=${S3_ACCESS_KEY}
aws.credentials.secretKey=${S3_SECRET_KEY}
aws.bucket.fileImport=${S3_BUCKET_NAME}
aws.s3.region=${S3_REGION}

# Security
keycloak.auth-server-url=${KEYCLOAK_URL}
keycloak.ssl-required=${KEYCLOAK_SSL_REQUIRED}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.resource=${KEYCLOAK_CLIENT_ID}
keycloak.use-resource-role-mappings=true
keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET}
keycloak.public-client=false
keycloak.bearer-only=true
keycloak.cors=true

keycloak.securityConstraints[0].authRoles[0]=admin
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/location/*

keycloak.securityConstraints[1].authRoles[0]=admin
keycloak.securityConstraints[1].securityCollections[0].patterns[0]=/resolution/*

# Externalized URLs for OpenDataRestService
open.data.events.url=https://tourism.api.opendatahub.com/v1/EventShort/GetbyRoomBooked?startdate=%s&eventlocation=NOI&datetimeformat=uxtimestamp&publishedon=noi-totem
open.data.event.locations.url=https://tourism.api.opendatahub.com/v1/EventShort/RoomMapping
open.data.places.url=https://mobility.api.opendatahub.com/v2/flat/NOI-Place?select=sorigin,scode,smetadata.name.en,smetadata.room_label,smetadata.todaynoibzit&limit=-1&where=and(smetadata.type.in.(Meetingroom,Seminarroom),sorigin.eq.office365,sactive.eq.true,smetadata.name.en.neq.null)